% This code is written by Hussein Taleb(2010)
% Ref: H. Taleb, K. Abedi, and S. Golmohammadi, “Operation of Quantum-Dot Semiconductor Optical Amplifiers under Non-uniform Current Injection,” Applied Optics, vol. 50, pp. 608-617, 2011.
% All dimentions are in cm and all times in seconds
clear all
close all
clc
J0=4;% Normalized current injected into active region of QD-SOA
pico=10^-12;%this is defined for simplicity in defining times
nano=10^-9; %this is defined for simplicity in defining t
q=1.602*10^-19; %electron charge
alpha=4;% waveguide loss(1/cm)
NQ=2.5*10^17;  %the dot volume density(1/cm3)
Vg=8.45*10^9; %the group velocity in the QD-SOA(cm/s)
g0max=14; %maximum gain coefficient for the ground state transition(1/cm) 
g1max=20; %maximum gain coefficient for the first excited state transition(1/cm)
g2max=0; %maximum gain coefficient for the second state transition(1/cm)
E0=0.962; %the energy(eV) corresponding to the gain peak of the qround state transition.
E1=1.0416; %the energy(eV) corresponding to the gain peak of the first excited state transition.
E2=1.1526; %the energy(eV) corresponding to the gain peak of the second excited state transition.
sigma=0.03; %The inhomogeneous line broadening(eV)
%Gain calculations
Ein=E0;%energy of photons of input pulse are equal to maximum of first excited state
g0=(g0max)*(E0/Ein)*exp(-1*(Ein-E0)^2/(2*sigma^2));%modal gain for ground state @Gain dispersion effect
g1=(g1max)*(E1/Ein)*exp(-1*(Ein-E1)^2/(2*sigma^2));%modal gain for first excited state @Gain dispersion effect
g2=(g2max)*(E2/Ein)*exp(-1*(Ein-E2)^2/(2*sigma^2));%modal gain for second excited state @Gain dispersion effect
aii=1;aij=1;cii=0.2;c32np=0;c32nn=0;c21nn=7;c21np=35;c10nn=27;c10np=175;anw=1;bnw=0.2;cnw=0.2;%phonon and Auger Assisted coefficients
T0R=0.2*nano;%the spontaneous radiative lifetime in ground state
T1R=0.2*nano;%the spontaneous radiative lifetime in first excited state
T2R=0.2*nano;%the spontaneous radiative lifetime in second excited state
TWR=0.2*nano;%the spontaneous radiative lifetime in wetting layer
Tn10=8*pico;%The phonon-assisted electrons capture time(first ES to GS )
Tn01=80*pico;%The phonon-assisted electrons escape time(GS to first ES)
Tn21=2*pico;%The phonon-assisted electrons capture time(second ES to first ES)
Tn12=20*pico; %The phonon-assisted electrons escape time(first ES to second ES)
Tn32=0.8*pico;%The phonon-assisted electrons capture time(from WL to second ES)
Tn23=8*pico;%The phonon-assisted electrons escape time(from second ES to WL)
Tp10=0.5*pico; %for all hole levels in valence band==>Tp(k+1,k)=0.5*pico
Tp01=0.75*pico; %for all hole levels in valence band==>Tp(k,k+1)=0.75*pico
L=0.3; %QD-SOA Length in cm(the Length of QD-SOA is 2mm)
Lw=0.2*10^-4;%effective width of QD-SOA in cm
W=4*10^-4;%width of active region in cm
dz=0.015;% the Length of a small section of soa waveguide(longitudinal section of soa waveguide is 3um(micron))
Ts=600*pico;%total time of simulation if Ts picosecond
dt=0.002*pico;% the time step of simulation(the time is increased by dt(femtosecond)steps 
M=round(Ts/dt)-1;% number of nodes in Time Domain of simulation 
N=round(L/dz)-1; %number of nodes in space domain of simulation
disp('Output saturation photon density(1/cm^3) of QD-SOA is:')
S_sat=NQ/(Vg*g0max*T0R) %#ok<NOPTS> saturation density
S1mw=0.001/(Vg*W*Lw*Ein*1.602*10^-19);% 1 miliWatt power have this intensity
delta=0.4*pico;Ain=200*S1mw; S0=0;S0C=0;%Ain=0.5*S_sat; %input gaussian pulse characteristics
%delta=0.4*pico;Ain=1.814*S_sat; S0=0;%Ain=S0 in this matlab codes %input gaussian pulse characteristics
E_pulse=((2*pi)^0.5)*Ain*Vg*delta*W*Lw*Ein*1.602*10^-19 ;%energy of input pulses in JOLE
disp('Energy of every input pulses in femto-Jole:')
Pulse_Energy=E_pulse*10^15 %#ok<NOPTS> Ain=200*S1mw==> Pulse_Energy=200fJ, P_ave=100mW
P_ave=(5*10^11)*(E_pulse);%average power at bitrate=500Gb/s
disp('Average optical power at 500 Gb/s of input signal in mW:')
Average_power=P_ave*1000 %#ok<NOPTS>
repeat=0;Gain_SS=zeros(M+1,1);Gain_FDM=zeros(M+1,1); 
%==============================
%initialization
S=zeros(M+1,N+1); %intensity of light in all nodes of created two dimentional grid
fn0=ones(M+1,N+1); %Occupancy of Quantum Dot Levels are initialized
fn1=fn0;fn2=fn0;Wn=fn0;fp0=fn0;fp1=fn0;fp2=fn0;fp3=fn0;fp4=fn0;fp5=fn0;fp6=fn0;fp7=fn0;Wp=fn0;gQD=fn0;dS=fn0;
t=zeros(M+1,1);Sin=zeros(M+1,1);Sout=zeros(M+1,1);SS=zeros(M+1,1);%this three vectors are inintialized as vertical zero vector for all times
for m=2:1:(M+1)
    t(m-1)=(m-1)*dt;
    tt=t(m-1);
    SS(m-1)=Ain*(exp((-2*(tt-1*pico)^2)/(delta*delta))+exp((-2*(tt-3*pico)^2)/(delta*delta))+exp((-2*(tt-5*pico)^2)/(delta*delta))+exp((-2*(tt-7*pico)^2)/(delta*delta))+exp((-2*(tt-9*pico)^2)/(delta*delta))+exp((-2*(tt-11*pico)^2)/(delta*delta))+exp((-2*(tt-13*pico)^2)/(delta*delta))+exp((-2*(tt-15*pico)^2)/(delta*delta))+exp((-2*(tt-17*pico)^2)/(delta*delta))+exp((-2*(tt-19*pico)^2)/(delta*delta))+exp((-2*(tt-21*pico)^2)/(delta*delta))+exp((-2*(tt-23*pico)^2)/(delta*delta))+exp((-2*(tt-25*pico)^2)/(delta*delta))+exp((-2*(tt-27*pico)^2)/(delta*delta))+exp((-2*(tt-29*pico)^2)/(delta*delta))+exp((-2*(tt-31*pico)^2)/(delta*delta))+exp((-2*(tt-33*pico)^2)/(delta*delta))+exp((-2*(tt-35*pico)^2)/(delta*delta))+exp((-2*(tt-37*pico)^2)/(delta*delta))+exp((-2*(tt-39*pico)^2)/(delta*delta))+exp((-2*(tt-41*pico)^2)/(delta*delta))+exp((-2*(tt-43*pico)^2)/(delta*delta))+exp((-2*(tt-45*pico)^2)/(delta*delta))+exp((-2*(tt-47*pico)^2)/(delta*delta))+exp((-2*(tt-49*pico)^2)/(delta*delta))+exp((-2*(tt-51*pico)^2)/(delta*delta))+exp((-2*(tt-53*pico)^2)/(delta*delta))+exp((-2*(tt-55*pico)^2)/(delta*delta))+exp((-2*(tt-57*pico)^2)/(delta*delta))+exp((-2*(tt-59*pico)^2)/(delta*delta))+exp((-2*(tt-61*pico)^2)/(delta*delta))+exp((-2*(tt-63*pico)^2)/(delta*delta))+exp((-2*(tt-65*pico)^2)/(delta*delta))+exp((-2*(tt-67*pico)^2)/(delta*delta))+exp((-2*(tt-69*pico)^2)/(delta*delta))+exp((-2*(tt-71*pico)^2)/(delta*delta))+exp((-2*(tt-73*pico)^2)/(delta*delta))+exp((-2*(tt-75*pico)^2)/(delta*delta))+exp((-2*(tt-77*pico)^2)/(delta*delta))+exp((-2*(tt-79*pico)^2)/(delta*delta))+exp((-2*(tt-81*pico)^2)/(delta*delta))+exp((-2*(tt-83*pico)^2)/(delta*delta))+exp((-2*(tt-85*pico)^2)/(delta*delta))+exp((-2*(tt-87*pico)^2)/(delta*delta))+exp((-2*(tt-89*pico)^2)/(delta*delta))+exp((-2*(tt-91*pico)^2)/(delta*delta))+exp((-2*(tt-93*pico)^2)/(delta*delta))+exp((-2*(tt-95*pico)^2)/(delta*delta))+exp((-2*(tt-97*pico)^2)/(delta*delta))+exp((-2*(tt-99*pico)^2)/(delta*delta))+exp((-2*(tt-101*pico)^2)/(delta*delta))+exp((-2*(tt-103*pico)^2)/(delta*delta))+exp((-2*(tt-105*pico)^2)/(delta*delta))+exp((-2*(tt-107*pico)^2)/(delta*delta))+exp((-2*(tt-109*pico)^2)/(delta*delta))+exp((-2*(tt-111*pico)^2)/(delta*delta))+exp((-2*(tt-113*pico)^2)/(delta*delta))+exp((-2*(tt-115*pico)^2)/(delta*delta))+exp((-2*(tt-117*pico)^2)/(delta*delta))+exp((-2*(tt-119*pico)^2)/(delta*delta))+exp((-2*(tt-121*pico)^2)/(delta*delta))+exp((-2*(tt-123*pico)^2)/(delta*delta))+exp((-2*(tt-125*pico)^2)/(delta*delta))+exp((-2*(tt-127*pico)^2)/(delta*delta))+exp((-2*(tt-129*pico)^2)/(delta*delta))+exp((-2*(tt-131*pico)^2)/(delta*delta))+exp((-2*(tt-133*pico)^2)/(delta*delta))+exp((-2*(tt-135*pico)^2)/(delta*delta))+exp((-2*(tt-137*pico)^2)/(delta*delta))+exp((-2*(tt-139*pico)^2)/(delta*delta))+exp((-2*(tt-141*pico)^2)/(delta*delta))+exp((-2*(tt-143*pico)^2)/(delta*delta))+exp((-2*(tt-145*pico)^2)/(delta*delta))+exp((-2*(tt-147*pico)^2)/(delta*delta))+exp((-2*(tt-149*pico)^2)/(delta*delta))+exp((-2*(tt-151*pico)^2)/(delta*delta))+exp((-2*(tt-153*pico)^2)/(delta*delta))+exp((-2*(tt-155*pico)^2)/(delta*delta))+exp((-2*(tt-157*pico)^2)/(delta*delta))+exp((-2*(tt-159*pico)^2)/(delta*delta))+exp((-2*(tt-161*pico)^2)/(delta*delta))+exp((-2*(tt-163*pico)^2)/(delta*delta))+exp((-2*(tt-165*pico)^2)/(delta*delta))+exp((-2*(tt-167*pico)^2)/(delta*delta))+exp((-2*(tt-169*pico)^2)/(delta*delta))+exp((-2*(tt-171*pico)^2)/(delta*delta))+exp((-2*(tt-173*pico)^2)/(delta*delta))+exp((-2*(tt-175*pico)^2)/(delta*delta))+exp((-2*(tt-177*pico)^2)/(delta*delta))+exp((-2*(tt-179*pico)^2)/(delta*delta))+exp((-2*(tt-181*pico)^2)/(delta*delta))+exp((-2*(tt-183*pico)^2)/(delta*delta))+exp((-2*(tt-185*pico)^2)/(delta*delta))+exp((-2*(tt-187*pico)^2)/(delta*delta))+exp((-2*(tt-189*pico)^2)/(delta*delta))+exp((-2*(tt-191*pico)^2)/(delta*delta))+exp((-2*(tt-193*pico)^2)/(delta*delta))+exp((-2*(tt-195*pico)^2)/(delta*delta))+exp((-2*(tt-197*pico)^2)/(delta*delta))+exp((-2*(tt-199*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-1*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-3*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-5*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-7*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-9*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-11*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-13*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-15*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-17*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-19*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-21*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-23*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-25*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-27*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-29*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-31*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-33*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-35*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-37*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-39*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-41*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-43*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-45*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-47*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-49*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-51*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-53*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-55*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-57*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-59*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-61*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-63*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-65*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-67*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-69*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-71*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-73*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-75*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-77*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-79*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-81*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-83*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-85*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-87*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-89*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-91*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-93*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-95*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-97*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-99*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-101*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-103*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-105*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-107*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-109*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-111*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-113*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-115*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-117*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-119*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-121*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-123*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-125*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-127*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-129*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-131*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-133*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-135*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-137*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-139*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-141*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-143*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-145*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-147*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-149*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-151*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-153*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-155*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-157*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-159*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-161*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-163*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-165*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-167*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-169*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-171*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-173*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-175*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-177*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-179*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-181*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-183*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-185*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-187*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-189*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-191*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-193*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-195*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-197*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-199*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-1*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-3*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-5*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-7*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-9*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-11*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-13*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-15*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-17*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-19*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-21*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-23*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-25*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-27*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-29*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-31*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-33*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-35*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-37*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-39*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-41*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-43*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-45*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-47*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-49*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-51*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-53*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-55*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-57*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-59*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-61*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-63*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-65*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-67*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-69*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-71*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-73*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-75*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-77*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-79*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-81*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-83*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-85*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-87*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-89*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-91*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-93*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-95*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-97*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-99*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-101*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-103*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-105*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-107*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-109*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-111*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-113*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-115*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-117*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-119*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-121*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-123*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-125*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-127*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-129*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-131*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-133*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-135*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-137*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-139*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-141*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-143*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-145*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-147*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-149*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-151*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-153*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-155*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-157*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-159*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-161*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-163*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-165*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-167*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-169*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-171*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-173*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-175*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-177*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-179*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-181*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-183*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-185*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-187*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-189*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-191*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-193*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-195*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-197*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-199*pico)^2)/(delta*delta)));
end 
for m=2:1:(M+1)
%SS(m-1)=Ain*(exp((-2*(tt-1*pico)^2)/(delta*delta))+exp((-2*(tt-3*pico)^2)/(delta*delta))+exp((-2*(tt-5*pico)^2)/(delta*delta))+exp((-2*(tt-7*pico)^2)/(delta*delta))+exp((-2*(tt-9*pico)^2)/(delta*delta))+exp((-2*(tt-11*pico)^2)/(delta*delta))+exp((-2*(tt-13*pico)^2)/(delta*delta))+exp((-2*(tt-15*pico)^2)/(delta*delta))+exp((-2*(tt-17*pico)^2)/(delta*delta))+exp((-2*(tt-19*pico)^2)/(delta*delta))+exp((-2*(tt-21*pico)^2)/(delta*delta))+exp((-2*(tt-23*pico)^2)/(delta*delta))+exp((-2*(tt-25*pico)^2)/(delta*delta))+exp((-2*(tt-27*pico)^2)/(delta*delta))+exp((-2*(tt-29*pico)^2)/(delta*delta))+exp((-2*(tt-31*pico)^2)/(delta*delta))+exp((-2*(tt-33*pico)^2)/(delta*delta))+exp((-2*(tt-35*pico)^2)/(delta*delta))+exp((-2*(tt-37*pico)^2)/(delta*delta))+exp((-2*(tt-39*pico)^2)/(delta*delta))+exp((-2*(tt-41*pico)^2)/(delta*delta))+exp((-2*(tt-43*pico)^2)/(delta*delta))+exp((-2*(tt-45*pico)^2)/(delta*delta))+exp((-2*(tt-47*pico)^2)/(delta*delta))+exp((-2*(tt-49*pico)^2)/(delta*delta))+exp((-2*(tt-51*pico)^2)/(delta*delta))+exp((-2*(tt-53*pico)^2)/(delta*delta))+exp((-2*(tt-55*pico)^2)/(delta*delta))+exp((-2*(tt-57*pico)^2)/(delta*delta))+exp((-2*(tt-59*pico)^2)/(delta*delta))+exp((-2*(tt-61*pico)^2)/(delta*delta))+exp((-2*(tt-63*pico)^2)/(delta*delta))+exp((-2*(tt-65*pico)^2)/(delta*delta))+exp((-2*(tt-67*pico)^2)/(delta*delta))+exp((-2*(tt-69*pico)^2)/(delta*delta))+exp((-2*(tt-71*pico)^2)/(delta*delta))+exp((-2*(tt-73*pico)^2)/(delta*delta))+exp((-2*(tt-75*pico)^2)/(delta*delta))+exp((-2*(tt-77*pico)^2)/(delta*delta))+exp((-2*(tt-79*pico)^2)/(delta*delta))+exp((-2*(tt-81*pico)^2)/(delta*delta))+exp((-2*(tt-83*pico)^2)/(delta*delta))+exp((-2*(tt-85*pico)^2)/(delta*delta))+exp((-2*(tt-87*pico)^2)/(delta*delta))+exp((-2*(tt-89*pico)^2)/(delta*delta))+exp((-2*(tt-91*pico)^2)/(delta*delta))+exp((-2*(tt-93*pico)^2)/(delta*delta))+exp((-2*(tt-95*pico)^2)/(delta*delta))+exp((-2*(tt-97*pico)^2)/(delta*delta))+exp((-2*(tt-99*pico)^2)/(delta*delta))+exp((-2*(tt-101*pico)^2)/(delta*delta))+exp((-2*(tt-103*pico)^2)/(delta*delta))+exp((-2*(tt-105*pico)^2)/(delta*delta))+exp((-2*(tt-107*pico)^2)/(delta*delta))+exp((-2*(tt-109*pico)^2)/(delta*delta))+exp((-2*(tt-111*pico)^2)/(delta*delta))+exp((-2*(tt-113*pico)^2)/(delta*delta))+exp((-2*(tt-115*pico)^2)/(delta*delta))+exp((-2*(tt-117*pico)^2)/(delta*delta))+exp((-2*(tt-119*pico)^2)/(delta*delta))+exp((-2*(tt-121*pico)^2)/(delta*delta))+exp((-2*(tt-123*pico)^2)/(delta*delta))+exp((-2*(tt-125*pico)^2)/(delta*delta))+exp((-2*(tt-127*pico)^2)/(delta*delta))+exp((-2*(tt-129*pico)^2)/(delta*delta))+exp((-2*(tt-131*pico)^2)/(delta*delta))+exp((-2*(tt-133*pico)^2)/(delta*delta))+exp((-2*(tt-135*pico)^2)/(delta*delta))+exp((-2*(tt-137*pico)^2)/(delta*delta))+exp((-2*(tt-139*pico)^2)/(delta*delta))+exp((-2*(tt-141*pico)^2)/(delta*delta))+exp((-2*(tt-143*pico)^2)/(delta*delta))+exp((-2*(tt-145*pico)^2)/(delta*delta))+exp((-2*(tt-147*pico)^2)/(delta*delta))+exp((-2*(tt-149*pico)^2)/(delta*delta))+exp((-2*(tt-151*pico)^2)/(delta*delta))+exp((-2*(tt-153*pico)^2)/(delta*delta))+exp((-2*(tt-155*pico)^2)/(delta*delta))+exp((-2*(tt-157*pico)^2)/(delta*delta))+exp((-2*(tt-159*pico)^2)/(delta*delta))+exp((-2*(tt-161*pico)^2)/(delta*delta))+exp((-2*(tt-163*pico)^2)/(delta*delta))+exp((-2*(tt-165*pico)^2)/(delta*delta))+exp((-2*(tt-167*pico)^2)/(delta*delta))+exp((-2*(tt-169*pico)^2)/(delta*delta))+exp((-2*(tt-171*pico)^2)/(delta*delta))+exp((-2*(tt-173*pico)^2)/(delta*delta))+exp((-2*(tt-175*pico)^2)/(delta*delta))+exp((-2*(tt-177*pico)^2)/(delta*delta))+exp((-2*(tt-179*pico)^2)/(delta*delta))+exp((-2*(tt-181*pico)^2)/(delta*delta))+exp((-2*(tt-183*pico)^2)/(delta*delta))+exp((-2*(tt-185*pico)^2)/(delta*delta))+exp((-2*(tt-187*pico)^2)/(delta*delta))+exp((-2*(tt-189*pico)^2)/(delta*delta))+exp((-2*(tt-191*pico)^2)/(delta*delta))+exp((-2*(tt-193*pico)^2)/(delta*delta))+exp((-2*(tt-195*pico)^2)/(delta*delta))+exp((-2*(tt-197*pico)^2)/(delta*delta))+exp((-2*(tt-199*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-1*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-3*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-5*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-7*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-9*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-11*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-13*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-15*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-17*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-19*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-21*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-23*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-25*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-27*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-29*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-31*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-33*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-35*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-37*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-39*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-41*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-43*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-45*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-47*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-49*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-51*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-53*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-55*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-57*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-59*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-61*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-63*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-65*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-67*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-69*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-71*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-73*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-75*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-77*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-79*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-81*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-83*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-85*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-87*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-89*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-91*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-93*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-95*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-97*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-99*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-101*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-103*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-105*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-107*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-109*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-111*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-113*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-115*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-117*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-119*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-121*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-123*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-125*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-127*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-129*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-131*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-133*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-135*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-137*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-139*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-141*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-143*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-145*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-147*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-149*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-151*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-153*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-155*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-157*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-159*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-161*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-163*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-165*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-167*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-169*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-171*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-173*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-175*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-177*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-179*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-181*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-183*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-185*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-187*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-189*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-191*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-193*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-195*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-197*pico)^2)/(delta*delta))+exp((-2*(tt-200*pico-199*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-1*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-3*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-5*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-7*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-9*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-11*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-13*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-15*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-17*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-19*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-21*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-23*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-25*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-27*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-29*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-31*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-33*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-35*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-37*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-39*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-41*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-43*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-45*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-47*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-49*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-51*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-53*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-55*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-57*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-59*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-61*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-63*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-65*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-67*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-69*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-71*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-73*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-75*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-77*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-79*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-81*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-83*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-85*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-87*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-89*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-91*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-93*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-95*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-97*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-99*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-101*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-103*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-105*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-107*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-109*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-111*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-113*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-115*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-117*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-119*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-121*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-123*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-125*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-127*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-129*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-131*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-133*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-135*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-137*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-139*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-141*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-143*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-145*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-147*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-149*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-151*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-153*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-155*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-157*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-159*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-161*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-163*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-165*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-167*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-169*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-171*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-173*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-175*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-177*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-179*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-181*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-183*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-185*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-187*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-189*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-191*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-193*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-195*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-197*pico)^2)/(delta*delta))+exp((-2*(tt-400*pico-199*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-1*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-3*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-5*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-7*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-9*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-11*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-13*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-15*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-17*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-19*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-21*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-23*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-25*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-27*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-29*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-31*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-33*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-35*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-37*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-39*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-41*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-43*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-45*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-47*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-49*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-51*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-53*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-55*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-57*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-59*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-61*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-63*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-65*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-67*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-69*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-71*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-73*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-75*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-77*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-79*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-81*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-83*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-85*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-87*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-89*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-91*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-93*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-95*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-97*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-99*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-101*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-103*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-105*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-107*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-109*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-111*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-113*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-115*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-117*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-119*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-121*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-123*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-125*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-127*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-129*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-131*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-133*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-135*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-137*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-139*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-141*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-143*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-145*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-147*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-149*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-151*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-153*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-155*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-157*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-159*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-161*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-163*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-165*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-167*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-169*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-171*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-173*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-175*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-177*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-179*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-181*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-183*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-185*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-187*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-189*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-191*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-193*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-195*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-197*pico)^2)/(delta*delta))+exp((-2*(tt-600*pico-199*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-1*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-3*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-5*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-7*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-9*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-11*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-13*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-15*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-17*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-19*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-21*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-23*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-25*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-27*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-29*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-31*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-33*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-35*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-37*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-39*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-41*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-43*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-45*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-47*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-49*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-51*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-53*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-55*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-57*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-59*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-61*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-63*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-65*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-67*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-69*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-71*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-73*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-75*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-77*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-79*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-81*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-83*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-85*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-87*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-89*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-91*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-93*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-95*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-97*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-99*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-101*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-103*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-105*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-107*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-109*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-111*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-113*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-115*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-117*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-119*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-121*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-123*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-125*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-127*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-129*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-131*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-133*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-135*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-137*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-139*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-141*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-143*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-145*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-147*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-149*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-151*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-153*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-155*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-157*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-159*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-161*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-163*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-165*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-167*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-169*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-171*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-173*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-175*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-177*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-179*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-181*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-183*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-185*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-187*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-189*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-191*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-193*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-195*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-197*pico)^2)/(delta*delta))+exp((-2*(tt-800*pico-199*pico)^2)/(delta*delta)));
S(m-1,1)=SS(m-1);%S(dt,1),S(2dt,1),S(3dt,1),...,S(M*dt,1) are the discretized intensities if input pulse at input facet
%for 2<=m<=(M+1) we can see that 1<=(m-1)<=M;it means that Sin has M rows(for m=2 we have tt=dt and so Sin=S(1,1) and so on
 for n=2:1:(N+1)
    z(n-1)=(n-1)*dz; 
    J(n-1)=J0;     %for uniform current     
    %Evaluation fo right hand side of differential Equation
    %The electron capture rates;at n=1 we have fn=0,fp=0==> all rates
    %are equal to zero,so we must find the Occupancies at other nodes.
    %The gain of QD-SOA
    gQD(m-1,n)=g0*(fn0(m-1,n)+fp0(m-1,n)-1)+g1*(fn1(m-1,n)+fp1(m-1,n)-1)+g2*(fn2(m-1,n)+fp2(m-1,n)-1);
    dS(m-1,n)=dz*(gQD(m-1,n)-alpha)*S(m-1,n-1); 
    S(m-1,n)=S(m-1,n-1)+dS(m-1,n);
    %*****************************************************************
    Rnc10=(1/Tn10)*(1-fn0(m-1,n))*fn1(m-1,n)*(aij+c10np*Wp(m-1,n)+c10nn*Wn(m-1,n));
    Rnc21=(1/Tn21)*(1-fn1(m-1,n))*fn2(m-1,n)*(aij+c21np*Wp(m-1,n)+c21nn*Wn(m-1,n));
    Rnc32=(1/Tn32)*(1-fn2(m-1,n))*Wn(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    %The electron escape rates
    Rne01=(1/Tn01)*(1-fn1(m-1,n))*fn0(m-1,n)*(aij+c10np*Wp(m-1,n)+c10nn*Wn(m-1,n));
    Rne12=(1/Tn12)*(1-fn2(m-1,n))*fn1(m-1,n)*(aij+c21np*Wp(m-1,n)+c21nn*Wn(m-1,n));
    Rne23=(1/Tn23)*(1-Wn(m-1,n))*fn2(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    %The spontaneous emission rate is given by
    Rsp0=(1/T0R)*(fn0(m-1,n))*(fp0(m-1,n))*(aii+cii*fp0(m-1,n)+cii*fn0(m-1,n));
    Rsp1=(1/T1R)*(fn1(m-1,n))*(fp1(m-1,n))*(aii+cii*fp1(m-1,n)+cii*fn1(m-1,n));
    Rsp2=(1/T2R)*(fn2(m-1,n))*(fp2(m-1,n))*(aii+cii*fp2(m-1,n)+cii*fn2(m-1,n));
    Rspn3=(1/TWR)*(Wn(m-1,n))*(anw+bnw*Wn(m-1,n)+cnw*(Wn(m-1,n)^2));%defect recombination,radiative recombination,Auger recombination respectively

    %The stimulated emission rate is given by
    Rst0=(1/NQ)*(Vg)*(g0)*(fn0(m-1,n)+fp0(m-1,n)-1)*S(m-1,n);
    Rst1=(1/NQ)*(Vg)*(g1)*(fn1(m-1,n)+fp1(m-1,n)-1)*S(m-1,n);
    Rst2=(1/NQ)*(Vg)*(g2)*(fn2(m-1,n)+fp2(m-1,n)-1)*S(m-1,n);
    % Rate Equations for Electron states 
    RnWL=(J(n-1)/T0R)-(Rnc32-Rne23)-Rspn3;
    Rn2=(Rnc32-Rne23)-(Rnc21-Rne12)-Rsp2-Rst2;
    Rn1=(Rnc21-Rne12)-(Rnc10-Rne01)-Rsp1-Rst1;
    Rn0=(Rnc10-Rne01)-Rsp0-Rst0;
    %*******************************************************************
    %*******************************************************************
    %The hole capture rates
    Rpc10=(1/Tp10)*(1-fp0(m-1,n))*fp1(m-1,n)*(aij+c10np*Wp(m-1,n)+c10nn*Wn(m-1,n));
    Rpc21=(1/Tp10)*(1-fp1(m-1,n))*fp2(m-1,n)*(aij+c21np*Wp(m-1,n)+c21nn*Wn(m-1,n));
    Rpc32=(1/Tp10)*(1-fp2(m-1,n))*fp3(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpc43=(1/Tp10)*(1-fp3(m-1,n))*fp4(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpc54=(1/Tp10)*(1-fp4(m-1,n))*fp5(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpc65=(1/Tp10)*(1-fp5(m-1,n))*fp6(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpc76=(1/Tp10)*(1-fp6(m-1,n))*fp7(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpc87=(1/Tp10)*(1-fp7(m-1,n))*Wp(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    %The hole escape rates
    Rpe01=(1/Tp01)*(1-fp1(m-1,n))*fp0(m-1,n)*(aij+c10np*Wp(m-1,n)+c10nn*Wn(m-1,n));
    Rpe12=(1/Tp01)*(1-fp2(m-1,n))*fp1(m-1,n)*(aij+c21np*Wp(m-1,n)+c21nn*Wn(m-1,n));
    Rpe23=(1/Tp01)*(1-fp3(m-1,n))*fp2(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpe34=(1/Tp01)*(1-fp4(m-1,n))*fp3(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpe45=(1/Tp01)*(1-fp5(m-1,n))*fp4(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpe56=(1/Tp01)*(1-fp6(m-1,n))*fp5(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpe67=(1/Tp01)*(1-fp7(m-1,n))*fp6(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rpe78=(1/Tp01)*(1-Wp(m-1,n))*fp7(m-1,n)*(aij+c32np*Wp(m-1,n)+c32nn*Wn(m-1,n));
    Rspp8=(1/TWR)*(Wp(m-1,n))*(anw+bnw*Wp(m-1,n)+cnw*(Wp(m-1,n)^2));%defect recombination,radiative recombination,Auger recombination respectively
    %The stimulated emission rate is given by


    % Rate Equations for hole states
    RpWL=(J(n-1)/T0R)-(Rpc87-Rpe78)-Rspp8;
    Rp7=(Rpc87-Rpe78)-(Rpc76-Rpe67);
    Rp6=(Rpc76-Rpe67)-(Rpc65-Rpe56);
    Rp5=(Rpc65-Rpe56)-(Rpc54-Rpe45);
    Rp4=(Rpc54-Rpe45)-(Rpc43-Rpe34);
    Rp3=(Rpc43-Rpe34)-(Rpc32-Rpe23);
    Rp2=(Rpc32-Rpe23)-(Rpc21-Rpe12)-Rsp2-Rst2;
    Rp1=(Rpc21-Rpe12)-(Rpc10-Rpe01)-Rsp1-Rst1;
    Rp0=(Rpc10-Rpe01)-Rsp0-Rst0;
    %Calculation of occupation probabilities of Quantum Dot Energy states
    fn0(m,n)=fn0(m-1,n)+dt*Rn0;
    fn1(m,n)=fn1(m-1,n)+dt*Rn1;
    fn2(m,n)=fn2(m-1,n)+dt*Rn2;
    Wn(m,n)=Wn(m-1,n)+dt*RnWL;
    fp0(m,n)=fp0(m-1,n)+dt*Rp0;
    fp1(m,n)=fp1(m-1,n)+dt*Rp1;
    fp2(m,n)=fp2(m-1,n)+dt*Rp2;
    fp3(m,n)=fp3(m-1,n)+dt*Rp3;
    fp4(m,n)=fp4(m-1,n)+dt*Rp4;
    fp5(m,n)=fp5(m-1,n)+dt*Rp5;
    fp6(m,n)=fp6(m-1,n)+dt*Rp6;
    fp7(m,n)=fp7(m-1,n)+dt*Rp7;
    Wp(m,n)=Wp(m-1,n)+dt*RpWL;
 end 
end
total_gain=zeros(1,length(SS));
for k=1:1:length(SS)
total_gain(k)=S(k,N+1)/SS(k); 
end 
Sout_fixed=S(:,N+1);
Gain_fixed=total_gain;
fn0_fixed_end=fn0(:,N);
fp0_fixed_end=fp0(:,N);  
fn0_fixed_first=fn0(:,2);
fp0_fixed_first=fp0(:,2);
fp0_fixed_average=fp0(M,:);
fn0_fixed_average=fn0(M,:);       
tps=t/pico;

%%outputs^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
%figure(1)
fn0_fixed_first(M+1,:)=inf;fn0_fixed_end(M+1,:)=inf;
fp0_fixed_first(M+1,:)=inf;fp0_fixed_end(M+1,:)=inf;
%set(axes,'FontName','Times New Roman');plot(tps,fn0_fixed_first,tps,fn0_fixed_end,tps,fp0_fixed_first,tps,fp0_fixed_end,'black','linewidth',1);xlabel('Time(ps)','Fontname','Times new Roman');ylabel('GS Occupation probability','Fontname','Times new Roman');title('Occupation probability of electrons in ground state');legend('f^n_0 at z=0','f^n_0 at z=L','f^p_0 at z=0','f^p_0 at z=L');set(legend,'FontName','Times');
%figure(2)
gQD(M+1,2)=inf;gQD(M+1,round(N/2))=inf;gQD(M+1,N)=inf;
%set(axes,'FontName','Times New Roman');plot(tps,10*log10(gQD(:,2)),'magenta-',tps,10*log10(gQD(:,round(N/2))),'b-',tps,10*log10(gQD(:,N)),'r-',tps,10*log10(total_gain),'black-','linewidth',1);xlabel('Time(ps)','Fontname','Times new Roman');ylabel('Gain(dB)','Fontname','Times new Roman');title('optical gain of QD-SOA in the length of waveguide');legend('Modal gain at Z=0','Modal gain at Z=L/2','Modal gain at Z=L','Net optical gain');set(legend,'FontName','Times');
%set(axes,'FontName','Times New Roman');plot(tps,(gQD(:,2)),'magenta-',tps,(gQD(:,round(N/2))),'b-',tps,(gQD(:,N)),'r-',tps,(total_gain),'black-','linewidth',1);xlabel('Time(ps)','Fontname','Times new Roman');ylabel('Gain(1/cm)','Fontname','Times new Roman');title('optical gain of QD-SOA in the length of waveguide');legend('Modal gain at Z=0','Modal gain at Z=L/2','Modal gain at Z=L','Net optical gain');set(legend,'FontName','Times');
%figure(3)
%set(axes,'FontName','Times New Roman');plot(tps,SS,'r',tps,Sout_fixed,'b','linewidth',0.5);xlabel('Time(ps)','Fontname','Times new Roman');ylabel('Photon Density(1/cm^3)','Fontname','Times new Roman');title('input & output photon density');legend('Input photon density','Output photon density');set(legend,'FontName','Times');
%figure(4)
%set(axes,'FontName','Times New Roman');plot(tps,SS,'r',tps,Sout_fixed,'b','linewidth',1.5);xlabel('Time(ps)','Fontname','Times new Roman');ylabel('Photon Density(1/cm^3)','Fontname','Times new Roman');title('input & output photon density');legend('Input photon density','Output photon density');set(legend,'FontName','Times');xlim([558 562]);
%figure(5)
dz_new=(max(z)+2*dz)/(length(z)-1);
z_new=0:dz_new:L;z_new(length(z_new))=L;
fn0_plot=zeros(1,length(z)-1);fp0_plot=zeros(1,length(z)-1);
fn0_plot(1,:)=fn0_fixed_average(2:length(z));
fp0_plot(1,:)=fp0_fixed_average(2:length(z));
S_final(1,:)=S(M-pico/dt,2:length(z));
%set(axes,'FontName','Times New Roman');plot(10*z_new,fn0_plot,10*z_new,fp0_plot,'linewidth',1.5);xlabel('distance(mm)','Fontname','Times new Roman');ylabel('GS Occupation Probability','Fontname','Times new Roman');%xlim([0.0 10*L]);
%figure(6)
%[AX,H1,H2] = plotyy(10*z_new,g0*(fn0_plot+fp0_plot-1),10*z_new,S_final,'plot');xlabel('distance(mm)','Fontname','Times new Roman');set(get(AX(1),'Ylabel'),'String','GS Modal Gain','Fontname','Times new Roman');set(get(AX(2),'Ylabel'),'String','Photon Density(1/cm^3)','Fontname','Times new Roman');set(H1,'LineStyle','-','Linewidth',2);set(H2,'LineStyle','-','Linewidth',2);set(AX(1),'FontName','Times New Roman');set(AX(2),'FontName','Times New Roman');%xlim(AX(1),[0.0 L]);xlim(AX(2),[0.0 L]);
%
%[AX,H1,H2] = plotyy(10*z_new,10*log10(g0*(fn0_plot+fp0_plot-1)),10*z_new,S_final,'plot');xlabel('distance(mm)','Fontname','Times new Roman');set(get(AX(1),'Ylabel'),'String','GS Modal Gain','Fontname','Times new Roman');set(get(AX(2),'Ylabel'),'String','Photon Density(1/cm^3)','Fontname','Times new Roman');set(H1,'LineStyle','-','Linewidth',2);set(H2,'LineStyle','-','Linewidth',2);set(AX(1),'FontName','Times New Roman');set(AX(2),'FontName','Times New Roman');%xlim(AX(1),[0.0 L]);xlim(AX(2),[0.0 L]);
%hold on
%[AX,H1] = plotyy(10*z_new,fn0_plot,10*z_new,fp0_plot,'plot');xlabel('distance(mm)','Fontname','Times new Roman');set(get(AX(1),'Ylabel'),'String','Sum of GS Occupation Probabilities','Fontname','Times new Roman');set(get(AX(2),'Ylabel'),'String','Photon Intensity(1/cm^3)','Fontname','Times new Roman');set(H1,'LineStyle','-','Linewidth',2);set(AX(1),'FontName','Times New Roman');xlim(AX(1),[0.0 L]);
%[AX,H1] = plot(10*z_new,fn0_plot,10*z_new,fp0_plot,'plot');set(H1,'LineStyle','-','Linewidth',2);set(H2,'LineStyle','-','Linewidth',2);set(AX(1),'FontName','Times New Roman');set(AX(2),'FontName','Times New Roman');xlim(AX(1),[0.0 L]);xlim(AX(2),[0.0 L]);
%hold on
%[AX,H1,H2] = plotyy(10*z_new,fp0_plot,10*z_new,S_final,'plot');xlabel('distance(mm)','Fontname','Times new Roman');set(get(AX(1),'Ylabel'),'String','Sum of GS Occupation Probabilities','Fontname','Times new Roman');set(get(AX(2),'Ylabel'),'String','Photon Intensity(1/cm^3)','Fontname','Times new Roman');set(H1,'LineStyle','-','Linewidth',2);set(H2,'LineStyle','-','Linewidth',2);set(AX(1),'FontName','Times New Roman');set(AX(2),'FontName','Times New Roman');xlim(AX(1),[0.0 L]);xlim(AX(2),[0.0 L]);

%plot(10*z_new,fn0_plot,10*z_new,fp0_plot);
%hold off


figure(3)
f1=subplot(2,2,1);
plot(tps,fn0_fixed_first,'-',tps,fn0_fixed_end,tps,fp0_fixed_first,'-',tps,fp0_fixed_end,'black','linewidth',1);xlabel('Time(ps)','Fontname','Times new roman','FontWeight','bold');ylabel('GS Occupation probability','Fontname','Times new roman','FontWeight','bold');title('Occup. prob. of Electrons & Holes GS','FontName','Times new roman','FontWeight','bold','fontangle','italic','Color','black');legend('f^n_0 at z=0','f^n_0 at z=L','f^p_0 at z=0','f^p_0 at z=L');set(legend,'FontName','Times new roman','fontangle','italic');
f2=subplot(2,2,2);
plot(10*z_new,fn0_plot,10*z_new,fp0_plot,'-','linewidth',1.2);xlabel('distance(mm)','Fontname','Times new roman','FontWeight','bold');ylabel('GS Occupation Probability','Fontname','Times new roman','FontWeight','bold');title('GS Occupation probability','FontName','Times new roman','FontWeight','bold','fontangle','italic','Color','black');legend('Electrons GS','Holes GS');set(legend,'Fontname','Times new roman','fontangle','italic');grid on
f3=subplot(2,2,3);
plot(tps,(gQD(:,2)),'magenta-',tps,(gQD(:,round(N/2))),'b-',tps,(gQD(:,N)),'r-',tps,(total_gain),'black-','linewidth',1);xlabel('Time(ps)','Fontname','Times new roman','FontWeight','bold');ylabel('GS Gain(1/cm)','Fontname','Times new roman','FontWeight','bold');title('Temporal Variations of GS Gain','FontName','Times new roman','FontWeight','bold','fontangle','italic','Color','black');legend('Modal gain at z=0','Modal gain at z=L/2','Modal gain at z=L','Net optical gain');set(legend,'Fontname','Times new roman','fontangle','italic');
f4=subplot(2,2,4);
[AX,H1,H2] = plotyy(10*z_new,g0*(fn0_plot+fp0_plot-1),10*z_new,S_final,'plot');xlabel('distance(mm)','Fontname','Times new roman','FontWeight','bold');set(get(AX(1),'Ylabel'),'String','GS Modal Gain(1/cm)','Fontname','Times new roman','FontWeight','bold');set(get(AX(2),'Ylabel'),'String','Photon Density(1/cm^3)','Fontname','Times new roman','FontWeight','bold');set(H1,'LineStyle','-','Linewidth',1.2);set(H2,'LineStyle','-','Linewidth',1.2);set(AX(1),'Fontname','Times new roman','FontWeight','bold');set(AX(2),'Fontname','Times new roman','FontWeight','bold');title('Gain and Photon Density along the Cavity','FontName','Times new roman','FontWeight','bold','fontangle','italic','Color','black');grid on %xlim(AX(1),[0.0 L]);xlim(AX(2),[0.0 L]);
set(f1,'FontName','Times new roman','FontWeight','bold');set(f3,'FontName','Times new roman','FontWeight','bold');
set(f2,'FontName','Times new roman','FontWeight','bold');set(f4,'FontName','Times new roman','FontWeight','bold');

%figure(4)
%set(axes,'FontName','Times New Roman');plot(tps,SS,'r',tps,Sout_fixed,'b','linewidth',0.5);xlabel('Time(ps)','Fontname','Times new Roman');ylabel('Photon Density(1/cm^3)','Fontname','Times new Roman');title('input & output photon density');legend('Input photon density','Output photon density');set(legend,'FontName','Times');

figure(4)
set(axes,'FontName','Times New Roman','FontWeight','bold');plot(tps,SS,'r',tps,Sout_fixed,'b','linewidth',0.5);xlabel('Time(ps)','Fontname','Times new Roman','FontWeight','bold');ylabel('Photon Density(1/cm^3)','Fontname','Times new Roman','FontWeight','bold');legend('Input photon density','Output photon density');set(legend,'FontName','Times','FontWeight','bold','fontangle','italic');
figure(5)
plot(tps,fn0_fixed_first,'-',tps,fn0_fixed_end,tps,fp0_fixed_first,'-',tps,fp0_fixed_end,'black','linewidth',1);xlabel('Time(ps)','Fontname','Times new roman','FontWeight','bold');ylabel('GS Occupation probability','Fontname','Times new roman','FontWeight','bold');title('Occup. prob. of Electrons & Holes GS','FontName','Times new roman','FontWeight','bold','fontangle','italic','Color','black');legend('f^n_0 at z=0','f^n_0 at z=L','f^p_0 at z=0','f^p_0 at z=L');set(legend,'FontName','Times new roman','fontangle','italic');
%figure(6)
%plot(10*z_new,fn0_plot,10*z_new,fp0_plot,'-','linewidth',1.2);xlabel('distance(mm)','Fontname','Times new roman','FontWeight','bold');ylabel('GS Occupation Probability','Fontname','Times new roman','FontWeight','bold');title('GS Occupation probability','FontName','Times new roman','FontWeight','bold','fontangle','italic','Color','black');legend('Electrons GS','Holes GS');set(legend,'Fontname','Times new roman','fontangle','italic');grid on
%set(axes,'FontName','Times New Roman','FontWeight','bold');plot(tps,(gQD(:,2)),'black',tps,(gQD(:,round(N/2))),'black',tps,(gQD(:,N)),'black','linewidth',1);xlabel('Time(ps)','Fontname','Times new roman','FontWeight','bold');ylabel('GS Modal Gain(1/cm)','Fontname','Times new roman','FontWeight','bold');%title('Temporal Variations of GS Gain','FontName','Times new roman','FontWeight','bold','fontangle','italic','Color','black');%f4=subplot(2,2,4);
figure(7)
[AX,H1,H2] = plotyy(10*z_new,g0*(fn0_plot+fp0_plot-1),10*z_new,S_final/max(S_final),'plot');xlabel('distance(mm)','Fontname','Times new roman','FontWeight','bold');set(get(AX(1),'Ylabel'),'String','GS Modal Gain(1/cm)','Fontname','Times new roman','FontWeight','bold');set(get(AX(2),'Ylabel'),'String','Normalized Photon Density','Fontname','Times new roman','FontWeight','bold');set(H1,'LineStyle','-','Linewidth',3);set(H2,'LineStyle','-','Linewidth',3);set(AX(1),'Fontname','Times new roman','FontWeight','bold');set(AX(2),'Fontname','Times new roman','FontWeight','bold');grid on %xlim(AX(1),[0.0 L]);xlim(AX(2),[0.0 L]);
%set(f1,'FontName','Times new roman','FontWeight','bold');set(f3,'FontName','Times new roman','FontWeight','bold');
%set(f2,'FontName','Times new roman','FontWeight','bold');%set(f4,'FontName','Times new roman','FontWeight','bold');

