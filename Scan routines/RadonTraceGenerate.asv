%%% generation of traces using radon transform for OP - OS parameters
% maimouna bocoum 24-10-2017
clearvars ;

addpath('..\Field_II')
addpath('..\radon inversion')
field_init(0);

parameters;
IsSaved = 1 ;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% Start an experiment
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

CurrentExperiement = Experiment(param);
% evaluate Phantom on simulation Box :
CurrentExperiement = CurrentExperiement.EvalPhantom();
I = CurrentExperiement.ShowPhantom();
[X,Z] = meshgrid(CurrentExperiement.MySimulationBox.x,CurrentExperiement.MySimulationBox.z);

Lprobe = param.N_elements*(param.width + param.kerf) ;
R = (max(CurrentExperiement.MySimulationBox.z)-min(CurrentExperiement.MySimulationBox.z))/2 ;

% radon transform of the image :
AOSignal = zeros(length(CurrentExperiement.MySimulationBox.z),CurrentExperiement.Nscan) ;
DelayLAWS = zeros(param.N_elements,CurrentExperiement.Nscan);

 for n_scan = 1:CurrentExperiement.Nscan

%[Irad] = RotateTheta(X,Z,I,CurrentExperiement.ScanParam(n_scan,1));
[Irad] = RotateTheta(X,Z,I,CurrentExperiement.ScanParam(n_scan));
CurrentExperiement = CurrentExperiement.InitializeProbe(n_scan) ;
DelayLAWS( CurrentExperiement.MyProbe.ActiveList ,n_scan) = CurrentExperiement.MyProbe.DelayLaw ;
%d_offset = ( R*tan(CurrentExperiement.ScanParam(n_scan,1)/2) )*tan(CurrentExperiement.ScanParam(n_scan,1));
d_offset = ( R*tan(CurrentExperiement.ScanParam(n_scan)/2) )*tan(CurrentExperiement.ScanParam(n_scan));     
d_offset = d_offset/(CurrentExperiement.MySimulationBox.z(2)-CurrentExperiement.MySimulationBox.z(1)); % convert to pixels for sum 
Mask = interp1(CurrentExperiement.MyProbe.center(:,1,1),double(CurrentExperiement.BoolActiveList(:,n_scan)),X);

%Irad = Irad.*Mask ;
% imagesc(Irad)
AOSignal(:,n_scan) = interp1(1:size(Irad,1),sum(Irad,2),(1:size(Irad,1))+d_offset,'linear',0) ;
drawnow
% pause(0.5)
% axis equal
 end

figure;
imagesc(CurrentExperiement.MySimulationBox.x*1e3,CurrentExperiement.MySimulationBox.z*1e3,AOSignal)

figure
plot(DelayLAWS,'o')


MyImage = OP(AOSignal,CurrentExperiement.ScanParam,CurrentExperiement.MySimulationBox.z,param.fs_aq,param.c); 


%% saving data to reconstruct folder

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% End Program - Free memory
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
rmpath('..\radon inversion')
field_end;
